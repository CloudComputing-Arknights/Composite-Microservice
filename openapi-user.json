{
  "openapi": "3.1.0",
  "info": {
    "title": "User/Address API",
    "description": "Demo FastAPI app using Pydantic v2 models for User and Address",
    "version": "0.1.0"
  },
  "paths": {
    "/addresses": {
      "post": {
        "summary": "Create Address",
        "operationId": "create_address_addresses_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Addresses",
        "operationId": "list_addresses_addresses_get",
        "parameters": [
          {
            "name": "street",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by street",
              "title": "Street"
            },
            "description": "Filter by street"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by city",
              "title": "City"
            },
            "description": "Filter by city"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by state/region",
              "title": "State"
            },
            "description": "Filter by state/region"
          },
          {
            "name": "postal_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by postal code",
              "title": "Postal Code"
            },
            "description": "Filter by postal code"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by country",
              "title": "Country"
            },
            "description": "Filter by country"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressRead"
                  },
                  "title": "Response List Addresses Addresses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address_id}": {
      "get": {
        "summary": "Get Address",
        "operationId": "get_address_addresses__address_id__get",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Address Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Address",
        "operationId": "update_address_addresses__address_id__put",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Address Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete_address_addresses__address_id__delete",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Address Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create User",
        "operationId": "create_user_users_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Users",
        "operationId": "list_users_users_get",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by username",
              "title": "Username"
            },
            "description": "Filter by username"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by email",
              "title": "Email"
            },
            "description": "Filter by email"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by phone number",
              "title": "Phone"
            },
            "description": "Filter by phone number"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by city of at least one address",
              "title": "City"
            },
            "description": "Filter by city of at least one address"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by country of at least one address",
              "title": "Country"
            },
            "description": "Filter by country of at least one address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response List Users Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Get User",
        "operationId": "get_user_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User",
        "operationId": "update_user_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "operationId": "delete_user_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/db/health": {
      "get": {
        "summary": "Db Health",
        "operationId": "db_health_db_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressBase": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Persistent Address ID (server-generated).",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "street": {
            "type": "string",
            "title": "Street",
            "description": "Street address and number.",
            "example": "123 Main St"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "City or locality.",
            "example": "New York"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/region code if applicable.",
            "example": "NY"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal or ZIP code.",
            "example": "10001"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country name or ISO label.",
            "example": "USA"
          }
        },
        "type": "object",
        "required": [
          "street",
          "city",
          "country"
        ],
        "title": "AddressBase",
        "examples": [
          {
            "city": "New York",
            "country": "USA",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "postal_code": "10001",
            "state": "NY",
            "street": "123 Main St"
          }
        ]
      },
      "AddressCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Persistent Address ID (server-generated).",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "street": {
            "type": "string",
            "title": "Street",
            "description": "Street address and number.",
            "example": "123 Main St"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "City or locality.",
            "example": "New York"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/region code if applicable.",
            "example": "NY"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal or ZIP code.",
            "example": "10001"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country name or ISO label.",
            "example": "USA"
          }
        },
        "type": "object",
        "required": [
          "street",
          "city",
          "country"
        ],
        "title": "AddressCreate",
        "description": "Creation payload; ID is generated server-side but present in the base model.",
        "examples": [
          {
            "city": "London",
            "country": "UK",
            "id": "11111111-1111-4111-8111-111111111111",
            "postal_code": "NW1 6XE",
            "street": "221B Baker St"
          }
        ]
      },
      "AddressRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Persistent Address ID (server-generated).",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "street": {
            "type": "string",
            "title": "Street",
            "description": "Street address and number.",
            "example": "123 Main St"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "City or locality.",
            "example": "New York"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/region code if applicable.",
            "example": "NY"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal or ZIP code.",
            "example": "10001"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country name or ISO label.",
            "example": "USA"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp (UTC).",
            "example": "2025-01-15T10:20:30Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp (UTC).",
            "example": "2025-01-16T12:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "street",
          "city",
          "country"
        ],
        "title": "AddressRead",
        "examples": [
          {
            "city": "New York",
            "country": "USA",
            "created_at": "2025-01-15T10:20:30Z",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "postal_code": "10001",
            "state": "NY",
            "street": "123 Main St",
            "updated_at": "2025-01-16T12:00:00Z"
          }
        ]
      },
      "AddressUpdate": {
        "properties": {
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street",
            "description": "Street address and number.",
            "example": "124 Main St"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City or locality.",
            "example": "New York"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/region code if applicable.",
            "example": "NY"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal or ZIP code.",
            "example": "10002"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country name or ISO label.",
            "example": "USA"
          }
        },
        "type": "object",
        "title": "AddressUpdate",
        "description": "Partial update; address ID is taken from the path, not the body.",
        "examples": [
          {
            "city": "New York",
            "country": "USA",
            "postal_code": "10002",
            "state": "NY",
            "street": "124 Main St"
          },
          {
            "city": "Brooklyn"
          }
        ]
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Unique handle for the user.",
            "example": "alice"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Primary email address.",
            "example": "alice@example.com"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number.",
            "example": "+1-212-555-0199"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date",
            "description": "Date of birth (YYYY-MM-DD).",
            "example": "2000-09-01"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/AddressBase"
            },
            "type": "array",
            "title": "Addresses",
            "description": "Addresses linked to this user (each has a persistent Address ID).",
            "example": [
              {
                "city": "New York",
                "country": "USA",
                "id": "550e8400-e29b-41d4-a716-446655440000",
                "postal_code": "10001",
                "state": "NY",
                "street": "123 Main St"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "username",
          "email"
        ],
        "title": "UserCreate",
        "description": "Creation payload for a User.",
        "examples": [
          {
            "addresses": [
              {
                "city": "London",
                "country": "UK",
                "id": "aaaaaaaa-aaaa-4aaa-8aaa-aaaaaaaaaaaa",
                "postal_code": "NW1 6XE",
                "street": "221B Baker St"
              }
            ],
            "birth_date": "1999-04-02",
            "email": "bob@example.com",
            "phone": "+1-202-555-0101",
            "username": "bob"
          }
        ]
      },
      "UserRead": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Unique handle for the user.",
            "example": "alice"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Primary email address.",
            "example": "alice@example.com"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number.",
            "example": "+1-212-555-0199"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date",
            "description": "Date of birth (YYYY-MM-DD).",
            "example": "2000-09-01"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/AddressBase"
            },
            "type": "array",
            "title": "Addresses",
            "description": "Addresses linked to this user (each has a persistent Address ID).",
            "example": [
              {
                "city": "New York",
                "country": "USA",
                "id": "550e8400-e29b-41d4-a716-446655440000",
                "postal_code": "10001",
                "state": "NY",
                "street": "123 Main St"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Server-generated User ID.",
            "example": "99999999-9999-4999-8999-999999999999"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp (UTC).",
            "example": "2025-01-15T10:20:30Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp (UTC).",
            "example": "2025-01-16T12:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email"
        ],
        "title": "UserRead",
        "description": "Server representation returned to clients.",
        "examples": [
          {
            "addresses": [
              {
                "city": "New York",
                "country": "USA",
                "id": "550e8400-e29b-41d4-a716-446655440000",
                "postal_code": "10001",
                "state": "NY",
                "street": "123 Main St"
              }
            ],
            "birth_date": "2000-09-01",
            "created_at": "2025-01-15T10:20:30Z",
            "email": "alice@example.com",
            "id": "99999999-9999-4999-8999-999999999999",
            "phone": "+1-212-555-0199",
            "updated_at": "2025-01-16T12:00:00Z",
            "username": "alice"
          }
        ]
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "example": "alice_new"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "example": "alice@newmail.com"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "example": "+44 20 7946 0958"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date",
            "example": "2000-09-01"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "description": "Replace the entire set of addresses with this list.",
            "example": [
              {
                "city": "London",
                "country": "UK",
                "id": "bbbbbbbb-bbbb-4bbb-8bbb-bbbbbbbbbbbb",
                "postal_code": "SW1A 2AA",
                "street": "10 Downing St"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Partial update for a User; supply only fields to change.",
        "examples": [
          {
            "username": "alice_new"
          },
          {
            "email": "alice@newmail.com"
          },
          {
            "addresses": [
              {
                "city": "London",
                "country": "UK",
                "id": "bbbbbbbb-bbbb-4bbb-8bbb-bbbbbbbbbbbb",
                "postal_code": "SW1A 2AA",
                "street": "10 Downing St"
              }
            ]
          }
        ]
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}