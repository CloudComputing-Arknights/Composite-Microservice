{
  "openapi": "3.1.0",
  "info": {
    "title": "Item & Thread API",
    "description": "Item and Thread microservice",
    "version": "0.1.0"
  },
  "paths": {
    "/items/": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create Item",
        "description": "Create a new item record.",
        "operationId": "create_item_items__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List Items",
        "description": "Get a list of all items, with optional filtering.",
        "operationId": "list_items_items__get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CategoryType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by item's category",
              "title": "Category"
            },
            "description": "Filter by item's category"
          },
          {
            "name": "transaction_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransactionType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by item's transaction type",
              "title": "Transaction Type"
            },
            "description": "Filter by item's transaction type"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemRead"
                  },
                  "title": "Response List Items Items  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/items/{item_id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get Item",
        "description": "Get a single item by its id.",
        "operationId": "get_item_items__item_id__get",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Items"
        ],
        "summary": "Update Item",
        "description": "Partially update an item's information.",
        "operationId": "update_item_items__item_id__patch",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Delete Item",
        "description": "Delete an item.",
        "operationId": "delete_item_items__item_id__delete",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryType": {
        "type": "string",
        "enum": [
          "FURNITURE"
        ],
        "title": "CategoryType"
      },
      "ConditionType": {
        "type": "string",
        "enum": [
          "BRAND_NEW",
          "LIKE_NEW",
          "GOOD",
          "POOR"
        ],
        "title": "ConditionType"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ItemCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Title of the post of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item in the post."
          },
          "condition": {
            "$ref": "#/components/schemas/ConditionType",
            "description": "Condition of the item (ConditionType)"
          },
          "category": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CategoryType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category of the posted item."
          },
          "transaction_type": {
            "$ref": "#/components/schemas/TransactionType",
            "description": "Type of the transaction, can be SALE or RENT."
          },
          "price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Price",
            "description": "Price of the item must be greater than 0."
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "The position for transaction, can be online or a physical place."
          },
          "image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Image Urls",
            "description": "The list of URL images of the post"
          },
          "user_UUID": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Uuid"
          }
        },
        "type": "object",
        "required": [
          "title",
          "condition",
          "transaction_type",
          "price"
        ],
        "title": "ItemCreate",
        "description": "Creation payload for an item and its post.",
        "examples": [
          {
            "category": [
              "FURNITURE"
            ],
            "condition": "LIKE_NEW",
            "description": "Brown sofa.",
            "image_urls": [
              "http://example.com/image1.jpg"
            ],
            "location": "400W 113th St",
            "price": 200.0,
            "title": "Sofa",
            "transaction_type": "SALE",
            "user_UUID": "99999999-9999-4999-8999-999999999999"
          }
        ]
      },
      "ItemRead": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Title of the post of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item in the post."
          },
          "condition": {
            "$ref": "#/components/schemas/ConditionType",
            "description": "Condition of the item (ConditionType)"
          },
          "category": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CategoryType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category of the posted item."
          },
          "transaction_type": {
            "$ref": "#/components/schemas/TransactionType",
            "description": "Type of the transaction, can be SALE or RENT."
          },
          "price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Price",
            "description": "Price of the item must be greater than 0."
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "The position for transaction, can be online or a physical place."
          },
          "image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Image Urls",
            "description": "The list of URL images of the post"
          },
          "item_UUID": {
            "type": "string",
            "format": "uuid",
            "title": "Item Uuid",
            "description": "Server-generated item ID",
            "example": "99999999-9999-4999-8999-999999999999"
          },
          "user_UUID": {
            "type": "string",
            "format": "uuid",
            "title": "User Uuid",
            "description": "Server-generated user ID",
            "example": "99999999-9999-4999-8999-999999999999"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp (UTC).",
            "example": "2025-02-20T11:22:33Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp (UTC).",
            "example": "2025-02-21T13:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "title",
          "condition",
          "transaction_type",
          "price",
          "item_UUID",
          "user_UUID"
        ],
        "title": "ItemRead",
        "description": "Server representation returned to clients.",
        "examples": [
          {
            "category": [
              "FURNITURE"
            ],
            "condition": "LIKE_NEW",
            "created_at": "2025-02-20T11:22:33Z",
            "description": "Brown sofa",
            "image_urls": [
              "http://example.com/image1.jpg"
            ],
            "item_UUID": "99999999-9999-4999-8999-999999999999",
            "location": "400 W 113th St",
            "price": 200.0,
            "title": "sofa",
            "transaction_type": "SALE",
            "updated_at": "2025-02-21T13:00:00Z",
            "user_UUID": "99999999-9999-4999-8999-999999999998"
          }
        ]
      },
      "ItemUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of the post of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item."
          },
          "condition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConditionType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Condition of the item (ConditionType)"
          },
          "category": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CategoryType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category of the posted item."
          },
          "transaction_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransactionType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of the transaction can be SALE or RENT."
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "description": "Price of the item must be greater than 0."
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "The position for transaction, can be online or a physical place."
          },
          "image_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Urls",
            "description": "The list of URL images of the post"
          }
        },
        "type": "object",
        "title": "ItemUpdate",
        "description": "Partial update for an item and its post."
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "SALE",
          "RENT"
        ],
        "title": "TransactionType"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}